"""
Django settings for translate_project project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import db_settings
from environ import Env
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# 환경변수 관리
env = Env()
# .env 경로에 파일이 있으면, 환경변수로서 읽어들임
env_path: Path = BASE_DIR / '.env'
if env_path.is_file():
    # .env 파일에 한글이 포함된 경우도 처리하기 위해 encoding="utf8"을 지정(안그러면 윈도우에서 오류)
    with env_path.open('rt', encoding='utf-8') as f:
        env.read_env(f, overwrite=True)



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-y6jkwlll3f^8j@g!ae4wbs5jc-$lqmm)15#6w81#+qu(d4fa7('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'channels',
    'daphne',
    'speedgame',   # 장고 채널스 라이브러리
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 써드파티 앱
    'django_bootstrap5',
    'corsheaders',
    # local 앱
    'translate_app', # 기본 앱
    'users_app', # 유저관리 앱
    'vocabulary_app', # 단어장 앱
    'board_app', # 게시판 앱
    'game_app',
    'roleplay_game_app',
    # 딕셔너리앱은 기본앱에서 처리해도 되고 필요시 앱 추가 필요
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]
CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:6379",
    "http://127.0.0.1:8000",  # 여기에 프론트엔드 도메인을 추가하세요.
]

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

CORS_ORIGIN_WHITELIST = ['http://127.0.0.1:5500','http://localhost:6379', 'http://127.0.0.1:8000']
CORS_ALLOW_CREDENTIALS = True
ROOT_URLCONF = 'translate_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [],
        'DIRS': [BASE_DIR / 'templates'],    
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'translate_project.wsgi.application'
ASGI_APPLICATION = "translate_project.asgi.application"   # 채널스 asgi로 구동하기
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}
# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = db_settings.DATABASES
SECRET_KEY = db_settings.SECRET_KEY


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# 언어코드 변경- 한국어로, 디폴트는 영어
# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = env.str("LANGUAGE_CODE", default="en-us")

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# user 만들면서 추가한 부분
AUTH_USER_MODEL = "users_app.User"
LOGIN_REDIRECT_URL = '/'


# OpenAI API key
OPENAI_API_KEY = env.str("OPENAI_API_KEY")


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',  # 또는 원하는 로그 레벨로 설정
    },
}

